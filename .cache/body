{"typed_code":"class Solution {\npublic:\n  string predictPartyVictory(string senate) {\n    queue<int> r = {};\n    queue<int> d = {};\n    int n = senate.size();\n\n    for (int i = 0; i < n; i++) {\n      char c = senate[i];\n      if (c == 'R') {\n        r.push(i);\n      }\n      if (c == 'D') {\n        d.push(i);\n      }\n    }\n\n    while (!r.empty() && !d.empty()) {\n      int topR = r.front();\n      r.pop();\n      int topD = d.front();\n      d.pop();\n\n      if (topR < topD) {\n        r.push(topR + n);\n      } else {\n        d.push(topD + n);\n      }\n    }\n\n    if (r.empty()) {\n      return \"Dire\";\n    } else {\n      return \"Radiant\";\n    }\n  }\n};","question_id":"649","lang":"cpp","data_input":false}