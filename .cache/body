{"lang":"cpp","typed_code":"class Solution {\npublic:\n  vector<int> twoSum(vector<int> &nums, int target) {\n    unordered_map<int, int> toFind;\n\n    int first = -1;\n    int second = -1;\n\n    for (int i = 0; i < nums.size(); i++) {\n      toFind[target - nums[i]] = i;\n    }\n\n    for (int i = 0; i < nums.size(); i++) {\n      if (toFind.find(nums[i]) != toFind.end() && toFind[nums[i]] != i) {\n        first = toFind[nums[i]];\n        second = i;\n      }\n    }\n\n    return {first, second};\n  }\n};","data_input":false,"question_id":"1"}